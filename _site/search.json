[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog\nMy name is Caleb J. Picker, and coffee drives my productivity. If you click my name, you will see my Curriculum Vitae. Briefly, my background is a healthy mix of academia and industry. I obtained my MA in Cognitive Psychology, and I studied Quantitative Psychology for my PhD for a while. I then went into industry working more or less as a data analyst for the past four years. My passion is statistics, and my career aspiration is data scientist.\nIn my spare time, I like to work on my learning skills. Specifically, I’m engaging in several projects. I plan to use this blog as my portfolio where I demonstrate what I learn.\nI also currently listen to the R Weekly Podcast, and I started reading Deep Learning with R, Second Edition.\nNote, that I created everything using Quarto in RStudio. All my source code is freely available. Please feel free to follow my journey as I grow to become a data scientist.\nE-mail me or comment on the discussion posts if you have any questions, comments, feedback, or whatever! I look forward to interacting with all of you."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A Coffee-Driven Approach to Data Science",
    "section": "",
    "text": "Welcome to My Coffee- and Data-Driven Blog\nMy name is Caleb J. Picker, and coffee drives my productivity. If you click my name, you will see my Curriculum Vitae. Briefly, my background is a healthy mix of academia and industry. I obtained my MA in Cognitive Psychology, and I studied Quantitiave Psychology for my PhD for a while. I then went into industry working more or less as a data analyst for the past four years. My passion is statistics, and my career aspiration is data scientist.\nIn my spare time, I like to work on my resume. Specifically, I’m engaging in several projects that I could put on my portfolio. So consider this blog as my portfolio where I demonstrate what I learn. I also currently listen to the R Weekly Podcast, and I started reading Deep Learning with R, Second Edition .\nNote, that I created everything using Quarto in RStudio. All my source code is freely available. As I continue to upskill, my code will get cleaner, my questions and analyses will become more precise, and you can watch me grow as a data scientist.\nI’m excited that I am nearly finished with my first blog post! So take a look! E-mail me or comment on the discussion posts if you have any questions, comments, feedback, or whatever! I look forward to interacting with all of you.\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nAFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis\n\n\n\n\n\n\n\n\n\n\n\n\nJan 22, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/afi-analysis/index.html",
    "href": "posts/afi-analysis/index.html",
    "title": "AFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis",
    "section": "",
    "text": "by Caleb J. Picker, created using Quarto in RStudio\nSing the Sorrow is my favorite album of all time. I’ve listened to it 1000s of times over the last 20 years since its release on March 11, 2003. If you’re like me, and you love AFI as much as I do, then you likely also love the rest of their discography. And if you’re really like me, then you also love data science, research, and statistics.\nAs the 20th Anniversary of the Sing the Sorrow concert looms on the horizon, I was inspired to combine both of my passions to analyze the content of AFI’s lyrics from their major album releases (and to upskill my data science skillset in the realm of natural language processing).\nSo let’s see what modern statistics can reveal about the themes (clandestine or not) behind AFI’s lyrics!"
  },
  {
    "objectID": "posts/afi-analysis/index.html#songs-removed-from-analysis",
    "href": "posts/afi-analysis/index.html#songs-removed-from-analysis",
    "title": "AFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis",
    "section": "2.1 Songs Removed from Analysis",
    "text": "2.1 Songs Removed from Analysis\nThen I filtered to only those songs in their major album release. This means I removed almost 100 songs from this analysis, as AFI’s catalog contains about 240 songs. See below for list of removed songs.\n\n\n\n\n\n\n\nFor transparency, I next show the most frequent words with and without stop words."
  },
  {
    "objectID": "posts/afi-analysis/index.html#word-frequency-with-and-without-stop-words",
    "href": "posts/afi-analysis/index.html#word-frequency-with-and-without-stop-words",
    "title": "AFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis",
    "section": "2.2 Word Frequency",
    "text": "2.2 Word Frequency\nTo set up for the rest of the analyses, I pre-processed the lyrics. I first removed lines of words that repeated (e.g., choruses), and then I removed stop words (e.g., “I”, “you”, “the”, “a”). Therefore, this section shows word frequency both with stop words (Table 1-left) and without stop words (Table 2-right). (Note: Each table is interactive and searchable!)\nAs an aside, an analysis with stop words would definitely be interesting. Davey uses pronouns and direct objects in unique ways, and that could be an entire analysis of its own: The stop words could be contextualized, for example, using ngrams.\nWithout further ado, let’s reveal AFI’s most frequently used words! Looking at Table 2 (right), it seems like the top 5 words are feel (75), love (70), eyes (60), time (55), and life (51), and heart (49).\n\n\nJoining, by = \"word\"\n\n\n\nWord frequency across AFI’s major album releases."
  },
  {
    "objectID": "posts/afi-analysis/index.html#sec-wordcloud",
    "href": "posts/afi-analysis/index.html#sec-wordcloud",
    "title": "AFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis",
    "section": "2.3 Wordcloud",
    "text": "2.3 Wordcloud\nHere I present a wordcloud (based on local and global weightings, see Technical Details for more information).\nTake a look! The top 2 words appear to be “feel” and “love”. What else caught your “eye”?"
  },
  {
    "objectID": "posts/afi-analysis/index.html#top-10-most-frequently-used-words-by-album",
    "href": "posts/afi-analysis/index.html#top-10-most-frequently-used-words-by-album",
    "title": "AFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis",
    "section": "2.4 Top 10 Most Frequently Used Words (by Album)",
    "text": "2.4 Top 10 Most Frequently Used Words (by Album)\nIn this section, I grouped the lyrics by major album release and sorted them (following https://drsimonj.svbtle.com/ordering-categories-within-ggplot2-facets). This allowed me to create a plot of AFI’s top 10 most frequently used words faceted by major album release. I tried my best to theme up the image and use Sing the Sorrow colors. I also tried to select colors from each album to represent the data as bars.\nFollowing on the theme, let’s look at Sing the Sorrow (the blood-red album in the second row, second column). The top 6 words are grey, tonight, dance, step, lay, inside, and heart. Grey likely comes from This Celluloid Dream (“All the colors (all grey) upon leaving (all grey) all will turn to grey.”)\nFeel free to look at the rest of the albums! It’s pretty interesting! Let me know what else you discover!\n\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead."
  },
  {
    "objectID": "posts/afi-analysis/index.html#technical-details",
    "href": "posts/afi-analysis/index.html#technical-details",
    "title": "AFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis",
    "section": "3.1 Technical Details",
    "text": "3.1 Technical Details\nIf you’re not into techincal details, feel free to skip this section and go straight to Cosine Similarity. Gefen et al.’s (2017) process allowed me to locally and globally weight the raw frequencies. The local weighting algorithm weights words more heavily that appear more often within a song (presumably because they’re more important); the global weighting algorithm weights words less heavily if words appear more often across all songs (presumably because they’re less important, like the word “the”). These weightings were then multiplied together.\nTo start the process, I split up all the songs from the major album releases into separate text files. Then I counted the raw frequencies like before. Then I locally and globally weighted the raw frequencies. The rest of the analyses for this post rely on these weighted frequencies.\nNext, I imported all the .txt files (one .txt file is one song) to make a collection of documents called a corpus. I set the minimum global frequency to 1.75. There are 698 vocabulary words and 147 songs. After that, I created several matrices that have song loadings and document loadings (similar to factor analysis). Next I present the song loadings and then the factor loadings–the song loadings uncover the hidden themes and the document loadings uncover which songs are related to a hidden factor."
  },
  {
    "objectID": "posts/afi-analysis/index.html#cosine-similarity-getting-more-interesting",
    "href": "posts/afi-analysis/index.html#cosine-similarity-getting-more-interesting",
    "title": "AFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis",
    "section": "3.2 Cosine Similarity",
    "text": "3.2 Cosine Similarity\nSimilar to concepts like correlation, here I present results based on a similarity metric called cosine similarity. Cosine similarity ranges between -1 and +1:\n\ncloser to -1 means the words are more opposite,\ncloser +1 means the words are more similar, and\ncloser to 0 means the words are unrelated.\n\n\n3.2.1 Related Words\nIn this interactive table, you can use search to narrow down by rows. However, I’m interested in sorting the values based on a column. In this case, I’ll use the word “eye”. I click the column header twice, and I find the top 3 words (cosine similarity) are:\n\n“stare” (+.55); “recal” (+.48); and “hair” (+.48)\n\nApparently, the use of the word “eye” is more closely related to staring, which may indicate him recalling a deeper memory. Interesting!\n\n\nWarning in instance$preRenderHook(instance): It seems your data is too\nbig for client-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html"
  },
  {
    "objectID": "posts/afi-analysis/index.html#how-words-relate-to-each-other-in-latent-semantic-space",
    "href": "posts/afi-analysis/index.html#how-words-relate-to-each-other-in-latent-semantic-space",
    "title": "AFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis",
    "section": "3.3 How Words Relate to Each Other in Latent Semantic Space",
    "text": "3.3 How Words Relate to Each Other in Latent Semantic Space\n\n3.3.1 Is “eye” more closely related to sight or memory?\nThe follow up question is whether “eye” is more closely related to sight or to memory words.\n\n\nCode\nprint(paste0(\"Eye and sight have cosine similarity rating of \", round(costring(\"eye\",\"sight\" ,tvectors=tk2[,1:ncol(tk2)]),2)))\n\n\n[1] \"Eye and sight have cosine similarity rating of 0.2\"\n\n\nCode\nprint(paste0(\"Eye and recal have cosine similarity rating of \", round(costring(\"eye\",'recal' ,tvectors=tk2[,1:ncol(tk2)]),2)))\n\n\n[1] \"Eye and recal have cosine similarity rating of 0.48\"\n\n\nCode\nprint(paste0(\"Eye and recogn have cosine similarity rating of \", round(costring(\"eye\",'recogn' ,tvectors=tk2[,1:ncol(tk2)]),2)))\n\n\n[1] \"Eye and recogn have cosine similarity rating of 0.22\"\n\n\nCode\nprint(paste0(\"Eye and rememb have cosine similarity rating of \", round(costring(\"eye\",'rememb' ,tvectors=tk2[,1:ncol(tk2)]),2)))\n\n\n[1] \"Eye and rememb have cosine similarity rating of 0.13\"\n\n\nAs it turns out, my hypothesis that “eye”, when projected onto the semantic space, is more closely related to memory words like “recal”, “recogn”, “rememb” is somewhat supported!\nWhat else would you like to see?"
  },
  {
    "objectID": "posts/afi-analysis/index.html#hidden-themes",
    "href": "posts/afi-analysis/index.html#hidden-themes",
    "title": "AFI’s (A Fire Inside’s) Lyrics: A Text Mining Analysis",
    "section": "3.4 Hidden Themes",
    "text": "3.4 Hidden Themes\nOne of the key features of latent semantic analysis is that it can reveal hidden themes that one otherwise may not have noticed. This is demonstrated in the song lyrics matrix. The full set is here for you to play with, but I’ve also extracted the top five words for all dimensions in the next table.\n\nHere, I will present all 50 from the analysis, but I will only analyze three of the hidden themes. In my estimation, the hidden themes aren’t so straightforward, so some help interpreting them would be welcomed!\nThe approach I took was to find hidden themes that were easier for me to interpret to better demonstrate the power of this analysis. The hidden themes are labeled V1 to V50, so feel free to explore to your heart’s content.\nThis next table extracts the top 5 words (and their loadings) for each of the 50 themes.\n\n\nCode\n # Top 5 of each factor\ntk2_round_df<-as.data.frame(tk2_round)\nword<-sapply(tk2_round_df,function(x) head(row.names(tk2_round_df)[order(x,decreasing=TRUE)],5))\n value<-sapply(tk2_round_df,function(x) head(x[order(x,decreasing=TRUE)],5))\n top_themes<-data.frame()\n top_themes<-cbind(word,value)\n\n DT::datatable(top_themes,\n                             options=list(scrollX=TRUE,scrollY=TRUE))\n\n\n\n\n\n\n\n\n3.4.1 Hidden Theme 1: Love is Red Blood\nFor hidden theme 1, I analyzed V5:\n\nTop 5: drop (30.48); red (26.23); love (16.62); danc (12.89); step (8.35)\n\nThe first hidden theme seems to related to “red drops” that signify “love” and ’danc”/“step”. Two songs come to mind: She Speaks the Language with the line “red, red drops upon my cuff let me know this must be love” and Dancing through Sunday with the lines “step by step by step we take the lead as drop by drop, we start to bleed” and “Oh, we dance in misery”\nSo the use of these top 5 words make the connection between love and blood, so every drop of blood spilled is love spilling out of his body.\n\n\n3.4.2 Hidden Theme 2: Death’s Sweet Caress\nFor hidden theme 2 (V48), I find the top 5 words:\n\nTop 5: caress (9.51); death (9.09); sweet (8.04); return (7.3); throw (5.86)\n\nThe second hidden theme seems to relate to a desire to “return” to “death”’s “sweet” “caress”. So Davey toys with the idea of embracing death as an affectionate comfort, although death is perhaps a state he cannot “trust”. To get this last interpretation, I looked at the bottom 5 words for V48 in the preceding table.\n\n\n3.4.3 Hidden Theme 3: Bathed in Your Radiance I Melt\nFor hidden theme 3 (V6), I find:\n\nTop 5: twist; melt; light; star; tonight\n\nThe third hidden them seems to relate to “twist” and “melt”ing by the “light” of a “star” “tonight”. This Celluloid Dream comes to mind with the lines: “Just like a memory, it twists me”; “bathed in your radiance I melt”; and “in the shadow of a star in static pallor”. So this could mean, at least within the context of this song, Davey compares his lack of radiance (static pallor) to his twisted memory of the radiance of his star who radiates light that “melt”s him."
  }
]